Scripts.execStorage("utils.tjs");

class Biscrat_Compiler
{
	const settingFileName = "compile_setting.tjs";
	const includeFilePath = "include/preprocessSetting.tjs";
	const preprocessCommand = "C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\bin\\cl.exe";
	const preprocessParamDebug = "/E /X \"{SRC}\" /EP /P /Fi\"{DEST}\" /D__DEBUG=1 /D__RELEASE=0 /FI\"{INCLUDE}\"";
	
	function Biscrat_Compiler() {}
	
	function error(message) {
		throw new Exception(message);
	}
	
	function compileDirectoryDebug(src, dest) {
		createDirectoryIfNotExist(dest);
		var settings = Scripts.evalStorage(settingFileName);
		var compiledFiles = %[];
		
		foreach(getFilesInDirectory(src), function(idx, src, dest, settings, compiledFiles) {
			var filename = Storages.extractStorageName(src).toLowerCase();
			dest += filename;
			
			// check the extention
			switch (Storages.extractStorageExt(src)) {
			case ".otjs":
			case ".tjs": break;
			default:
				error(@"異常な拡張子です(${src})");
				return;
			}
			
			if (settings.ignoreFiles[filename]) { return; }
			if (compiledFiles[filename]) {
				error("ファイル名が重複しています。");
				return;
			}
			compiledFiles[filename] = true;
			
			var srcModifiedTime = Storages.getLastModifiedFileTime(src);
			if (!Storages.isExistentStorage(dest) || Storages.getLastModifiedFileTime(dest) !== srcModifiedTime) {
				// preprocess
				var param = expandMessageStrings(preprocessParamDebug, "SRC", Storages.getLocalName(src), "DEST", Storages.getLocalName(dest), "INCLUDE", Storages.getLocalName(includeFilePath));
				dm(@"PREPROCEE: ${preprocessCommand} ${param}\n");
				var result = System.commandExecute(preprocessCommand, param);
				switch (true) {
				case result.status !== "ok":
					error("プリプロセスに失敗しました。\n" + result.message + "\n" + src);
					break;
				case result.exitcode !== 0:
					dm(@"ERROR : exitcode = ${result.exitcode}\n");
					foreach(result.stdout, function(idx, value) {
						dm(value + "\n");
					});
					Storages.deleteFile(dest);
					error("プリプロセスに失敗しました。\n" + src);
					break;
				default:
					if (!Storages.setLastModifiedFileTime(dest, srcModifiedTime)) {
						error(@"タイムスタンプの設定に失敗しました。(${dest})");
					}
					break;
				}
				
			}
			
		}, dest, settings, compiledFiles);
	}
}

var compiler = new Biscrat_Compiler();
if (System.getArgument("-compiledebug") == "yes") {
	compiler.compileDirectoryDebug(System.exePath + "src/", System.exePath + "data/debug/");
}
