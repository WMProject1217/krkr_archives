■□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━□■
                  SKN_CatSystem使い方
■□━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━□■

SKN_CatSystem.tjsをscenarioフォルダなどに入れます。
そしてOverride.tjsで
KAGLoadScript("SKN_CatSystem.tjs");
などとして読み込んでください。
※world.tjs読み込み後、KAGWorldPluginインスタンス化前の必要があります。

CatSystem2（以下CS2）形式のタグが使えるようになります。
※「@cs000_1_1_1_1_1」のようなかんじ

使う流れとしては

①立ち絵画像のpsdを準備(samples/psdにサンプルがあります)
②CS2の画像コンバータ画像コンバータ"WGC.exe"及び同梱のフォトショップスクリプト"krkrCharCSV.jsx"で変換
※"WGC.exe"で出力された画像はCS2の立ちキャラビューア、krkrCharCSVで出力された画像は吉里吉里で使用します。
③立ちキャラビューアで表示する画像を選ぶ。
④吉里吉里で表示。

となると思います。

以下詳しい説明です。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                    CS2について
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
http://cs2.suki.jp/からダウンロードできます。
※説明書などが入っているので「CS2コアセット」ではなく「CS2フルセット」の方をダウンロードしてください。
ここではCS2本体は使用しませんが、立ちキャラビューア及び画像コンバータを使います。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                    画像コンバータ"WGC.exe"
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
公式の説明は、ダウンロードして解凍したフォルダのcs2_full_v200/manual/index.htmlの
「データの作成」→「画像コンバータ："WGC.exe"」にあります。
より詳しい説明はCS2のマニュアルを参照してください。
ここではサンプルとして入れている「cs000.png」を変換する方法を説明します。
※skn_catsystem/samples/psdにあります。
画像コンバータはcs2_full_v200/toolフォルダに入っています。
WGC.exeを起動したら、設定ボタンを押してください。
「出力形式」が「HG3」
「先頭に@が付いたレイヤをコンバート(psdのみ)」をチェック
「出力画像を上下反転させる」をチェック
「その他の項目のチェックは外れている」ことを確認してOKボタンを押します。
あとは「cs000.psd」をドロップしてコンバートすればcs000.psdと同じフォルダにHG3ファイルが出力されます。
※「cs001.psd」「010.psd」についても同様にコンバートできます。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                    立ちキャラビューア"StView.exe"
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
公式の説明はcs2_full_v200/manual/index.html（以下CS2マニュアル）の
「開発支援ツール」「【StView.exe】･･･立ちキャラビューア」にあります。
より詳しい説明はCS2のマニュアルを参照してください。
ここでは先ほど「cs000.psd」を変換したHG3ファイルを表示させてみます。
"StView.exe"と同じフォルダに「image」フォルダを新しく作成します。
その「image」フォルダの中に先ほど変換したHG3ファイルをすべて移します。
次に"StView.exe"と同じフォルダに「config」フォルダを新しく作成します。
その「config」フォルダに、cs2_full_v200/cs2/configにあるstartup.xmlをコピーします。
これで"StView.exe"を起動するとキャラクタを表示できます。
※ついでにskn_catsystem/samples/catsystemにあるStView.iniを"StView.exe"と同じフォルダにおくと少し分かりやすくなります。
※StView.iniについてはCS2マニュアル「開発支援ツール」→「【StView.ini】･･･立ちキャラビューア定義ファイル」を参照

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                    CSV出力スクリプト"krkrCharCSV.jsx"
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
"krkrCharCSV.jsx"を使うと吉里吉里で使う画像をCSVファイルが出力されます。
"WGC.exe"と同じ形式のpsdが変換できるフォトショップ用スクリプトです。
説明はCS2マニュアルの
「データの説明」→「イメージファイル：".hg3"」を見てください。
※"krkrCharCSV.jsx"は現在のところ「出力ファイル名」の欄にのみ対応しています。
※「ID形式」「位置情報の付加」の欄の機能は未対応です。
ここではサンプルとして入れている「cs000.png」を変換する方法を説明します。
「cs000.png」をフォトショップで開きます。
「cs000.png」がアクティブになっている状態で"krkrCharCSV.jsx"を実行します。
※"krkrCharCSV.jsx"を画像以外の部分にドロップすると実行されます。
実行が終了すると、psdファイルと同じフォルダに「output」フォルダが作成され、その中に部品ごとにトリミングされたpngファイルと位置情報が書かれたoutput.csvが出力されます。
"krkrCharCSV.jsx"で出力されたpngファイルおよびcsvファイルは吉里吉里のfgimageフォルダなどに移して使用します。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                    psdのレイヤ名について
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
psdを変換するには"WGC.exe"で変換できる形にしておく必要がありますが、このプラグインで使用するにはCS2のマニュアルに書かれている他にルールがあります。
※CS2マニュアル「データの説明」→「イメージファイル：".hg3"」参照
立ち絵画像のファイル名は「cs」で始まるようにしなければなりません。
先頭に@が付いたレイヤをコンバートします。
「ID形式」「位置情報の付加」は未対応です。
キャラクタ、ポーズ、表示レベルは「cs」に続く3ケタの数字で指定します。
csXYZのXの部分にキャラクタごとの番号、Yの部分にポーズごとの番号、Zの部分にレベルごとの番号が来ます。
その次に_(アンダーバー)に続けて差分名が来ます。
※CS2マニュアル「データの作成」→「差分形式画像」も参照
※同梱のサンプルpsdファイルとpngファイルを見ると何となくわかると思います。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                    envinit.tjs
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
envinit.tjsではキャラごとにCSVファイルおよびキャラ番号を指定します。
※サンプルとして入っているenvinit.tjsを参照
csIDにはキャラクタ番号を指定します。
「psdのレイヤ名について」でcsXYZとして説明したXの部分に来る番号です。
※csIDは重複することができません。キャラクタごとに固有の値を指定してください。
csvにはcsvファイルのファイル名を指定します。
サンプルではoutput.csvからcs0.csvに改名しています。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                    csvファイルの書式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
csvファイルには画像ごとにオフセットと幅、高さを指定します。
※サンプルとして入っているcs0.csvを参照
"krkrCharCSV.jsx"を使うと勝手に出力してくれます。
※キャラクタごとにcsvファイルは1つしか指定できないので、サンプルのようにpsdが複数あるときは一つのcsvにまとめる必要があります。
#(シャープ)で始まる行はコメント行になります。
画像ファイル名,左上からのxオフセット,左上からのyオフセット,トリミング後の幅,トリミング後の高さ
という形になります。
ここでいう左上というのはトリミング前のキャンバス左上が原点となっています。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
                    タグの書式
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
"StView.exe"の操作パネル4段目に出力される「cs000,1,1,1,1,1,1」などの画像ファイル名をコピーして、
コロンをアンダーバーに置換するとその画像を表示するタグ名になります。
例)@cs000,1,1,1,1,1,1
画像はenvinit.tjsで指定したキャラクタレイヤに表示されます。
※上の例ではcsID:0と指定されたキャラクタレイヤに表示される。
表示する際にトランジションをかけたりアクションしたりなども行えます。
例)@cs000,1,1,1,1,1,1 fade=1000
画像を変える必要のない場合は、キャラクタ名のタグも使えます。
例)@しおり oapcity=128
この例では画像は変わらず不透明度のみ変更されます。
他の例としてはサンプルとして入っているfirst.ksを参照してください。
※表示レベルはcsXYZのZの部分で自動判別されます。